<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gunaTransfarantPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>